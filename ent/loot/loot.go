// Code generated by entc, DO NOT EDIT.

package loot

import (
	"fmt"

	"github.com/KawashiroNitori/lootbot/internal/macro"
)

const (
	// Label holds the string label denoting the loot type in the database.
	Label = "loot"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldRole holds the string denoting the role field in the database.
	FieldRole = "role"
	// Table holds the table name of the loot in the database.
	Table = "loots"
)

// Columns holds all SQL columns for loot fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldRole,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)

// RoleValidator is a validator for the "role" field enum values. It is called by the builders before save.
func RoleValidator(r macro.Role) error {
	switch r.String() {
	case "D1", "D2", "D3", "D4", "MT", "ST", "H1", "H2":
		return nil
	default:
		return fmt.Errorf("loot: invalid enum value for role field: %q", r)
	}
}
